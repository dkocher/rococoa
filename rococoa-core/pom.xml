<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>rococoa-core</artifactId>

  <parent>
    <groupId>org.rococoa</groupId>
    <artifactId>rococoa-parent</artifactId>
    <version>0.8.3-SNAPSHOT</version>
  </parent>

  <name>Rococoa Core</name>
  <packaging>jar</packaging>
  <url>http://www.rococoa.org</url>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <!-- trigger javah execution -->
          <javahClassNames>
            <javahClassName>org.rococoa.Rococoa</javahClassName>
          </javahClassNames>
          <!-- enable additional javah interface in dependencies list -->
          <javahSearchJNIFromDependencies>true</javahSearchJNIFromDependencies>
          <!-- | Add jdk include directories to system include path | Override 
            ${jkdIncludePath} If your jdk does not conform to Sun JDK layout -->
          <javahOS>darwin</javahOS>
          <compilerProvider>generic-classic</compilerProvider>
          <compilerStartOptions>
            <compilerStartOption>-g -Wall -O2 -fomit-frame-pointer -fPIC</compilerStartOption>
            <compilerStartOption>-arch x86_64</compilerStartOption>
          </compilerStartOptions>
          <linkerStartOptions>
            <linkerStartOption>-dynamiclib -arch x86_64
                    -framework QTKit -framework Foundation
            </linkerStartOption>
          </linkerStartOptions>
          <linkerFinalName></linkerFinalName>
        </configuration>
        <executions>
          <execution>
            <id>test-daylib</id>
            <phase>test-compile</phase>
            <goals>
              <goal>javah</goal>
              <goal>compile</goal>
              <goal>link</goal>
            </goals>
            <configuration>
              <sources>
                <source>
                  <!-- relative to your project directory -->
                  <directory>src/main/native</directory>
                  <fileNames>
                    <fileName>Rococoa.m</fileName>
                    <fileName>ProxyForJava.m</fileName>
                    <fileName>test.m</fileName>
                  </fileNames>
                </source>
              </sources>
              <linkerEndOptions>
                <linkerEndOption>-o ${project.build.testOutputDirectory}/librococoa.dylib</linkerEndOption>
              </linkerEndOptions>
            </configuration>
          </execution>
          <execution>
            <id>daylib</id>
            <phase>compile</phase>
            <goals>
              <goal>javah</goal>
              <goal>compile</goal>
              <goal>link</goal>
            </goals>
            <configuration>
              <sources>
                <source>
                  <!-- relative to your project directory -->
                  <directory>src/main/native</directory>
                  <fileNames>
                    <fileName>Rococoa.m</fileName>
                    <fileName>ProxyForJava.m</fileName>
                  </fileNames>
                </source>
              </sources>
              <linkerEndOptions>
                <linkerEndOption>-o ${project.build.directory}/librococoa-${project.version}.dylib</linkerEndOption>
              </linkerEndOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M4</version>
        <configuration>
          <excludes>
            <!-- Brain-dead plugin just looks for *Test* and so finds support 
              classes -->
            <exclude>**/TestStruct*.java</exclude>
          </excludes>
          <forkMode>once</forkMode>
          <trimStackTrace>false</trimStackTrace>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <executions>
          <execution>
            <id>install-test-library</id>
            <phase>install</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <groupId>org.rococoa</groupId>
              <artifactId>rococoa-core</artifactId>
              <version>${project.parent.version}</version>
              <packaging>dylib</packaging>
              <classifier>test</classifier>
              <file>${project.build.testOutputDirectory}/librococoa.dylib</file>
            </configuration>
          </execution>
          <execution>
            <id>install-library</id>
            <phase>install</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <groupId>org.rococoa</groupId>
              <artifactId>rococoa-core</artifactId>
              <version>${project.parent.version}</version>
              <packaging>dylib</packaging>
              <file>${project.build.directory}/librococoa-${project.version}.dylib</file>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!--
          because of maven deploy-file uploads source, jar also
          TODO maven-metadata.xml!/metadata/versioning/latest is not updated
          TODO how about https://stackoverflow.com/a/37552776/6102938
         -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <id>deploy-library</id>
            <phase>deploy</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>mvn</executable>
          <arguments>
            <argument>deploy:deploy-file</argument>
            <argument>-DgroupId=${project.groupId}</argument>
            <argument>-DartifactId=${project.artifactId}</argument>
            <argument>-Dversion=${project.version}</argument>
            <argument>-Dpackaging=dylib</argument>
            <argument>-Dfile=${project.build.testOutputDirectory}/librococoa.dylib</argument>
            <argument>-DrepositoryId=github</argument>
            <argument>-Durl=https://maven.pkg.github.com/umjammer/rococoa</argument>
            <argument>-s</argument>
            <argument>${env.GITHUB_WORKSPACE}/settings.xml</argument>
          </arguments>
          <environmentVariables>
            <GITHUB_TOKEN>${env.GITHUB_TOKEN}</GITHUB_TOKEN>
          </environmentVariables>
        </configuration>
      </plugin>
     </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
    </dependency>
  </dependencies>
</project>
